{"remainingRequest":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\pourp\\Desktop\\easypracticetest\\src\\App.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\src\\App.vue","mtime":1619779967665},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvcG91cnAvRGVza3RvcC9lYXN5cHJhY3RpY2V0ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgQ2hlY2tJY29uIH0gZnJvbSAnQGhlcm9pY29ucy92dWUvb3V0bGluZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3VG9Ebzoge30sCiAgICAgIGlkOiAwLAogICAgICBwbGFjZWhvbGRlcjogIkVudGVyIHNvbWV0aGluZyB0by1kby4uLiIsCiAgICAgIGdyZWVuQmFja2dyb3VuZDogewogICAgICAgICJwYWRkaW5nLWxlZnQiOiAiMnB4IgogICAgICB9LAogICAgICBidXR0b25DaGVja2VkOiB7CiAgICAgICAgZmxvYXQ6ICJsZWZ0IgogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgQ2hlY2tJY29uOiBDaGVja0ljb24KICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIHRvRG9MaXN0OiAnZ2V0VG9Eb0xpc3QnCiAgfSkpLAogIG1ldGhvZHM6IHsKICAgIGFkZFRvRG86IGZ1bmN0aW9uIGFkZFRvRG8oKSB7CiAgICAgIGlmICghdGhpcy5uZXdUb0RvLm5hbWUpIHsKICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gIllvdSBuZWVkIHRvIHdyaXRlIHNvbWV0aGluZyI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5uZXdUb0RvLmlkID0gdGhpcy5pZDsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWRkX3RvRG8nLCB0aGlzLm5ld1RvRG8pOwogICAgICAgIHRoaXMuaWQrKzsKICAgICAgICB0aGlzLm5ld1RvRG8gPSB7fTsKICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gIkVudGVyIHNvbWV0aGluZyB0by1kby4uLiI7CiAgICAgIH0KICAgIH0sCiAgICB0b0RvQWN0aW9uOiBmdW5jdGlvbiB0b0RvQWN0aW9uKGlkLCBhY3Rpb24pIHsKICAgICAgdmFyIHZhbHVlcyA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgYWN0aW9uOiBhY3Rpb24KICAgICAgfTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3RvRG9BY3Rpb24nLCB2YWx1ZXMpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["C:\\Users\\pourp\\Desktop\\easypracticetest\\src\\App.vue"],"names":[],"mappings":";;AA2DA,SAAQ,UAAR,QAAyB,MAAzB;AACA,SAAS,SAAT,QAA0B,wBAA1B;AAEA,eAAe;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,OAAO,EAAE,EADJ;AAEL,MAAA,EAAE,EAAE,CAFC;AAGL,MAAA,WAAW,EAAE,0BAHR;AAKL,MAAA,eAAe,EAAE;AACf,wBAAgB;AADD,OALZ;AASL,MAAA,aAAa,EAAE;AACb,QAAA,KAAK,EAAE;AADM;AATV,KAAP;AAaD,GAhBY;AAkBb,EAAA,UAAU,EAAE;AACV,IAAA,SAAQ,EAAR;AADU,GAlBC;AAsBb,EAAA,QAAQ,oBACH,UAAU,CAAC;AACZ,IAAA,QAAQ,EAAE;AADE,GAAD,CADP,CAtBK;AA4Bb,EAAA,OAAO,EAAE;AACP,IAAA,OADO,qBACG;AACR,UAAG,CAAC,KAAK,OAAL,CAAa,IAAjB,EAAuB;AACrB,aAAK,WAAL,GAAmB,6BAAnB;AACF,OAFA,MAEO;AACL,aAAK,OAAL,CAAa,EAAb,GAAkB,KAAK,EAAvB;AACA,aAAK,MAAL,CAAY,QAAZ,CAAqB,UAArB,EAAiC,KAAK,OAAtC;AAEA,aAAK,EAAL;AACA,aAAK,OAAL,GAAe,EAAf;AACA,aAAK,WAAL,GAAmB,0BAAnB;AACF;AACD,KAZM;AAcP,IAAA,UAdO,sBAcI,EAdJ,EAcQ,MAdR,EAcgB;AACrB,UAAI,MAAK,GAAI;AAAC,QAAA,EAAE,EAAF,EAAD;AAAK,QAAA,MAAM,EAAN;AAAL,OAAb;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB,EAAmC,MAAnC;AACD;AAjBM;AA5BI,CAAf","sourcesContent":["<template>\n  <div class=\"grid place-items-center\">\n    \n    <div class=\"row-start-1 title mt-space50px\">\n      <h1 class=\"text-grey_text font-normal text-size42\"> <span class=\"font-bold text-green_main text-size42\">Easy</span>ToDo </h1>\n    </div>\n\n    <div class=\"row-start-2 mt-space50px\">\n      <input \n        type=\"text\"\n        class=\"w-width200px rounded-l h-height35px bg-white text-grey_placeholder\"\n        :placeholder=\"placeholder\"\n        @keyup.enter=\"addToDo\"\n        v-model=\"newToDo.name\"\n      >\n      <button \n        class=\"button-create-to-do w-width105px rounded-r h-height35px bg-green_main text-white\"\n        @click=\"addToDo\"> \n          Create To-Do \n      </button>\n    </div>\n\n    <div class=\"row-start-3 mt-space25px\">\n\n      <div v-if=\"toDoList.length > 0\">\n        <p class=\"text-grey_text mb-space10px text-size14 leading-line_height16px\"> All To-Do's</p>\n\n        <div \n          class=\"mb-space10px\"\n          v-for=\"toDo in toDoList\" \n          :key=\"toDo.id\">\n\n          <div v-if=\"!toDo.check\">\n            <span class=\"show-to-do w-width245px rounded-l h-height30px bg-white text-grey7\"> {{toDo.name}} </span>\n            <!--Calling of the method toDoAction with the id of the selected toDo and the action to do with it -->\n            <button @click=\"toDoAction(toDo.id, 'delete')\" class=\"trash-button w-width30px rounded-r h-height30px bg-orange\"> <img src=\"@/assets/Vector.svg\" class=\"bg-orange text-white\"/> </button>\n            <button @click=\"toDoAction(toDo.id, 'check')\" class=\"check-button w-width30px h-height30px bg-green_actiontext\"> <CheckIcon class=\"bg-green_actiontext text-white\"/> </button>\n          </div>\n\n          <div v-else>\n            <button class=\"check-button w-width30px rounded-l h-height30px bg-green_actiontext\" :style='buttonChecked'> <CheckIcon class=\"bg-green_actiontext text-white\"/> </button>\n            <button @click=\"toDoAction(toDo.id, 'delete')\" class=\"trash-button w-width30px rounded-r h-height30px bg-orange\"> <img src=\"@/assets/Vector.svg\" class=\"bg-orange text-white\"/> </button>\n            <span class=\"show-to-do w-width245px h-height30px text-white bg-green_actiontext\" :style=\"greenBackground\"> {{toDo.name}} </span>\n          </div>\n\n        </div> \n\n      </div>\n\n      <div v-else class=\"mt-5 text-grey7\">\n        <p> Let's write some more tasks to do ! </p>\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters} from 'vuex'\nimport { CheckIcon } from '@heroicons/vue/outline'\n\nexport default {\n\n  data() {\n    return {\n      newToDo: {},\n      id: 0,\n      placeholder: \"Enter something to-do...\",\n\n      greenBackground: {\n        \"padding-left\": \"2px\"\n      },\n\n      buttonChecked: {\n        float: \"left\",\n      }\n    }\n  },\n\n  components: {\n    CheckIcon\n  },\n\n  computed: {\n    ...mapGetters({\n      toDoList: 'getToDoList',\n    }),\n  },\n\n  methods: {\n    addToDo() {\n      if(!this.newToDo.name) {\n        this.placeholder = \"You need to write something\"\n      } else {\n        this.newToDo.id = this.id\n        this.$store.dispatch('add_toDo', this.newToDo)\n\n        this.id ++\n        this.newToDo = {}\n        this.placeholder = \"Enter something to-do...\"\n      }\n    },\n\n    toDoAction(id, action) {\n      let values = {id, action}\n      this.$store.dispatch('toDoAction', values)\n    },\n  }\n\n}\n</script>\n\n\n<style>\n@font-face {\n  font-family: \"Roboto\";\n  src: local(\"Roboto\"),\n   url(./assets/css/fonts/Roboto-Light.ttf) format(\"truetype\");\n}\n\n* \n{\n  background-color: #F5F5F5;\n  font-family: \"Roboto\";\n  font-size: 12px;\n  line-height: 14px;\n}\n\ninput[type=\"text\"]\n{\n  padding: 11px 0px 10px 8px\n}\n\n.button-create-to-do {\n  float: right;\n  font-size: 14px;\n  line-height: 16px;\n}\n\n.trash-button {\n  float: right;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.check-button {\n  float:right;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px\n}\n\n.show-to-do {\n  display: inline-block;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 8px 2px 8px 8px;\n}\n\n</style>\n"],"sourceRoot":""}]}