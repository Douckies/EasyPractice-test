{"remainingRequest":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pourp\\Desktop\\easypracticetest\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\src\\store\\index.js","mtime":1619780699914},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pourp\\Desktop\\easypracticetest\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzL3BvdXJwL0Rlc2t0b3AvZWFzeXByYWN0aWNldGVzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICJDOi9Vc2Vycy9wb3VycC9EZXNrdG9wL2Vhc3lwcmFjdGljZXRlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHsKICBzdGF0ZTogewogICAgdG9Eb0xpc3Q6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIEFERF9UT0RPOiBmdW5jdGlvbiBBRERfVE9ETyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgc3RhdGUudG9Eb0xpc3QucHVzaCh2YWx1ZSk7CiAgICB9LAogICAgLy9NdXRhdGlvbiB0byBzZWUgaWYgdGhlIG9wZXJhdGlvbiBpcyBhIGNoZWNrIG9yIGEgZGVsZXRlIGFuZCBhZmZlY3QgdGhlIHByb3BlciBhY3Rpb24KICAgIEFDVElPTl9UT0RPOiBmdW5jdGlvbiBBQ1RJT05fVE9ETyhzdGF0ZSwgdmFsdWVzKSB7CiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzdGF0ZS50b0RvTGlzdC5lbnRyaWVzKCkpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX3N0ZXAkdmFsdWUgPSBfc2xpY2VkVG9BcnJheShfc3RlcC52YWx1ZSwgMiksCiAgICAgICAgICAgICAgX2kgPSBfc3RlcCR2YWx1ZVswXSwKICAgICAgICAgICAgICB0b0RvID0gX3N0ZXAkdmFsdWVbMV07CgogICAgICAgICAgaWYgKHRvRG8uaWQgPT09IHZhbHVlcy5pZCkgewogICAgICAgICAgICBpZiAodmFsdWVzLmFjdGlvbiA9PT0gJ2NoZWNrJykgewogICAgICAgICAgICAgIHRvRG8uY2hlY2sgPSB0cnVlOwogICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlcy5hY3Rpb24gPT09ICdkZWxldGUnKSB7CiAgICAgICAgICAgICAgdG9Eby5zcGxpY2UoX2ksIDEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhdGUudG9Eb0xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoc3RhdGUudG9Eb0xpc3RbaV0uaWQgPT09IHZhbHVlcy5pZCkgewogICAgICAgICAgaWYgKHZhbHVlcy5hY3Rpb24gPT09ICdjaGVjaycpIHsKICAgICAgICAgICAgc3RhdGUudG9Eb0xpc3RbaV0uY2hlY2sgPSB0cnVlOwogICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZXMuYWN0aW9uID09PSAnZGVsZXRlJykgewogICAgICAgICAgICBzdGF0ZS50b0RvTGlzdC5zcGxpY2UoaSwgMSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRfdG9EbzogZnVuY3Rpb24gYWRkX3RvRG8oX3JlZiwgdmFsdWUpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ0FERF9UT0RPJywgdmFsdWUpOwogICAgfSwKICAgIHRvRG9BY3Rpb246IGZ1bmN0aW9uIHRvRG9BY3Rpb24oX3JlZjIsIHZhbHVlcykgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQoJ0FDVElPTl9UT0RPJywgdmFsdWVzKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIC8vR2V0dGVyIHRvIGFsbG93IHRoZSB2aWV3cyB0byBnZXQgdGhlIHRvRG9MaXN0IGFycmF5IHZhbHVlcwogICAgZ2V0VG9Eb0xpc3Q6IGZ1bmN0aW9uIGdldFRvRG9MaXN0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b0RvTGlzdDsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["C:/Users/pourp/Desktop/easypracticetest/src/store/index.js"],"names":["createStore","state","toDoList","mutations","ADD_TODO","value","push","ACTION_TODO","values","entries","i","toDo","id","action","check","splice","length","actions","add_toDo","commit","toDoAction","getters","getToDoList"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADkB;AAKzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QADS,oBACAH,KADA,EACOI,KADP,EACc;AACrBJ,MAAAA,KAAK,CAACC,QAAN,CAAeI,IAAf,CAAoBD,KAApB;AACD,KAHQ;AAKT;AACAE,IAAAA,WANS,uBAMGN,KANH,EAMUO,MANV,EAMkB;AAAA,iDAEFP,KAAK,CAACC,QAAN,CAAeO,OAAf,EAFE;AAAA;;AAAA;AAEzB,4DAAiD;AAAA;AAAA,cAAtCC,EAAsC;AAAA,cAAnCC,IAAmC;;AAC/C,cAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzB,gBAAIJ,MAAM,CAACK,MAAP,KAAkB,OAAtB,EAA+B;AAC7BF,cAAAA,IAAI,CAACG,KAAL,GAAa,IAAb;AACD,aAFD,MAGK,IAAIN,MAAM,CAACK,MAAP,KAAkB,QAAtB,EAAgC;AACnCF,cAAAA,IAAI,CAACI,MAAL,CAAYL,EAAZ,EAAe,CAAf;AACD;AACF;AACF;AAXwB;AAAA;AAAA;AAAA;AAAA;;AAazB,WAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACT,KAAK,CAACC,QAAN,CAAec,MAA9B,EAAsCN,CAAC,EAAvC,EAA2C;AACzC,YAAIT,KAAK,CAACC,QAAN,CAAeQ,CAAf,EAAkBE,EAAlB,KAAyBJ,MAAM,CAACI,EAApC,EAAwC;AACtC,cAAIJ,MAAM,CAACK,MAAP,KAAkB,OAAtB,EAA+B;AAC7BZ,YAAAA,KAAK,CAACC,QAAN,CAAeQ,CAAf,EAAkBI,KAAlB,GAA0B,IAA1B;AACD,WAFD,MAGK,IAAIN,MAAM,CAACK,MAAP,KAAkB,QAAtB,EAAgC;AACnCZ,YAAAA,KAAK,CAACC,QAAN,CAAea,MAAf,CAAsBL,CAAtB,EAAyB,CAAzB;AACD;AACF;AACF;AACF;AA7BQ,GALc;AAsCzBO,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,0BACYb,KADZ,EACmB;AAAA,UAAhBc,MAAgB,QAAhBA,MAAgB;AACxBA,MAAAA,MAAM,CAAC,UAAD,EAAad,KAAb,CAAN;AACD,KAHM;AAKPe,IAAAA,UALO,6BAKcZ,MALd,EAKsB;AAAA,UAAjBW,MAAiB,SAAjBA,MAAiB;AAC3BA,MAAAA,MAAM,CAAC,aAAD,EAAgBX,MAAhB,CAAN;AACD;AAPM,GAtCgB;AAgDzBa,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,WAAW,EAAE,qBAAArB,KAAK;AAAA,aAAIA,KAAK,CAACC,QAAV;AAAA;AAFX;AAhDgB,CAAD,CAA1B","sourcesContent":["import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {\n    toDoList: []\n  },\n\n  mutations: {\n    ADD_TODO(state, value) {\n      state.toDoList.push(value)\n    },\n\n    //Mutation to see if the operation is a check or a delete and affect the proper action\n    ACTION_TODO(state, values) {\n\n      for(const [i, toDo] of state.toDoList.entries()) {\n        if (toDo.id === values.id) {\n          if (values.action === 'check') {\n            toDo.check = true\n          }\n          else if (values.action === 'delete') {\n            toDo.splice(i, 1)\n          }\n        }\n      }\n\n      for(let i=0; i<state.toDoList.length; i++) {\n        if (state.toDoList[i].id === values.id) {\n          if (values.action === 'check') {\n            state.toDoList[i].check = true\n          }\n          else if (values.action === 'delete') {\n            state.toDoList.splice(i, 1)\n          }\n        }\n      }\n    },\n\n  },\n\n  actions: {\n    add_toDo({commit}, value) {\n      commit('ADD_TODO', value)\n    },\n\n    toDoAction({commit}, values) {\n      commit('ACTION_TODO', values)\n    },\n  },\n\n  getters: {\n    //Getter to allow the views to get the toDoList array values\n    getToDoList: state => state.toDoList\n  },\n});\n"]}]}